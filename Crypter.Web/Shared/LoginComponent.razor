@inject AppSettings AppSettings
@inject HttpClient HttpClient
@inject NavigationManager NavManager
@inject IJSRuntime JsRuntime
@inject IAuthenticationService AuthenticationService

@if (LoginError)
{
    <div class="alert alert-danger" role="alert">
        @LoginErrorText
    </div>
}
<div class="mb-3">
    <label for="exampleFormControlInput1" class="form-label">Username</label>
    <input @bind="Username" type="text" class="form-control" id="usernameFormControl">
    <a href="/request-username">Forgot username?</a>
</div>
<div class="mb-3">
    <label for="exampleFormControlTextarea1" class="form-label">Password</label>
    <input @bind="Password" type="password" class="form-control" id="passwordFormControl">
    <a href="/password-reset">Forgot password?</a>
</div>
<div class="mb-3">
    <button type="button" class="btn btn-primary mx-auto d-block" @onclick="@(e => OnLoginClicked(Username, Password))">Login</button>
</div>

@code {
    private string Username;
    private string Password;
    private bool LoginError = false;
    private string LoginErrorText = "";

    protected override void OnInitialized()
    {
        if (AuthenticationService.User != null)
        {
            // TODO: Revise to Auth homepage when complete
            NavManager.NavigateTo("account-details");
        }
    }

    private async void OnLoginClicked(string username, string password)
    {
        byte[] digestedPassword = CryptoLib.Common.DigestUsernameAndPasswordForAuthentication(username, password);
        string digestedPasswordBase64 = Convert.ToBase64String(digestedPassword);

        try
        {
            await AuthenticationService.Login(Username, digestedPasswordBase64, $"{AppSettings.ApiBaseUrl}/user/authenticate");
            // TODO: Revide to Auth homepage when complete
            var returnUrl = NavManager.QueryString("returnUrl") ?? "account-details";
            NavManager.NavigateTo(returnUrl, true);
        }
        catch (Exception ex)
        {
            LoginError = true;
            LoginErrorText = ex.Message;
        }
    }
}
