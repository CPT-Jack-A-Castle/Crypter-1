@*
 * Copyright (C) 2021 Crypter File Transfer
 * 
 * This file is part of the Crypter file transfer project.
 * 
 * Crypter is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * The Crypter source code is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 * 
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * You can be released from the requirements of the aforementioned license
 * by purchasing a commercial license. Buying such a license is mandatory
 * as soon as you develop commercial activities involving the Crypter source
 * code without disclosing the source code of your own applications.
 * 
 * Contact the current copyright holder to discuss commerical license options.
 *@

@inherits RegisterComponentBase

@if (RegistrationSuccess)
{
   <div class="alert alert-success" role="alert">
      <h4 class="alert-heading">Registration Successful!</h4>
      <p>Your account was created successfully.</p>
      <hr>
      @if (UserProvidedEmailDuringRegistration)
            {
               <p>Thank you for providing an email address.</p>
               <p>A verification email has been sent to your inbox. Verifying your email address will allow you to enable notifications and perform password resets.</p>
            }
      <p>You may now login.</p>
   </div>
}
else
{
   @if (RegistrationError)
   {
      <div class="alert alert-danger" role="alert">
         @RegistrationErrorText
      </div>
   }

   <form>
      <div class="mb-3">
         <label for="usernameFormControl" class="form-label">Username</label>
         <div class="input-group has-validation">
            <input @bind="RegistrationInfo.Username" type="text" class="form-control @UsernameInvalidClass" id="usernameFormControl" />
            <div class="invalid-feedback">@UsernameValidationMessage</div>
         </div>
      </div>

      <div class="mb-3">
         <label for="passwordFormControl" class="form-label">Password</label>
         <div class="input-group has-validation">
            <input @bind="RegistrationInfo.Password" type="password" class="form-control @PasswordInvalidClass" id="passwordFormControl" />
            <div class="invalid-feedback">@PasswordValidationMessage</div>
         </div>
      </div>

      <div class="mb-3">
         <label for="passwordConfirmFormControl" class="form-label">Confirm Your Password</label>
         <div class="input-group has-validation">
            <input @bind="RegistrationInfo.PasswordConfirm" type="password" class="form-control @PasswordConfirmInvalidClass" id="passwordConfirmFormControl" />
            <div class="invalid-feedback">@PasswordConfirmValidationMessage</div>
         </div>
      </div>

      <div class="mb-3">
         <label for="emailAddressFormControl" class="form-label">Email Address</label>
         <input @bind="RegistrationInfo.EmailAddress" type="email" class="form-control" id="emailAddressFormControl" placeholder="Optional" />
      </div>

      <button type="submit" class="btn btn-primary" @onclick:preventDefault @onclick="OnRegisterClickedAsync">Register</button>
   </form>
}
