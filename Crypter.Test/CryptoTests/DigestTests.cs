using Crypter.CryptoLib.Enums;
using NUnit.Framework;

namespace Crypter.Test.CryptoTests
{
    public class DigestTests
    {
        [SetUp]
        public void Setup()
        {
        }

        [Test]
        public void Sha256_Digest_Works()
        {
            byte[] foo = new byte[] { 0x00 };
            Assert.DoesNotThrow(() => CryptoLib.Common.GetDigest(foo, DigestAlgorithm.SHA256));
        }

        [Test]
        public void Repeatable_Sha256_Hash()
        {
            byte[] knownInput = new byte[] { 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20 };
            byte[] knownHash = new byte[] {
                0x90, 0xa5, 0x12, 0xa5, 0xb8, 0xa1, 0x07, 0x06,
                0x5c, 0x11, 0xe1, 0x03, 0xaa, 0xd9, 0xc4, 0xa9,
                0xd9, 0xbc, 0x5f, 0x8b, 0x92, 0xac, 0x4d, 0x96,
                0x2c, 0x42, 0xdc, 0xc1, 0x01, 0x0f, 0x9d, 0xdb
            };
            var hashResult = CryptoLib.Common.GetDigest(knownInput, DigestAlgorithm.SHA256);
            Assert.AreEqual(knownHash, hashResult);
        }

        [Test]
        public void Repeatable_Sha512_Hash()
        {
            byte[] knownInput = new byte[] { 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20 };
            byte[] knownHash = new byte[] {
                0xf1, 0x81, 0x5b, 0xdc, 0x45, 0x83, 0x5e, 0x8d,
                0x7e, 0x1e, 0xc5, 0x46, 0x1c, 0x01, 0xd8, 0x08,
                0x05, 0xb0, 0xe9, 0x0c, 0xbc, 0x72, 0x6e, 0x16,
                0x7c, 0x98, 0xd1, 0xa5, 0x2a, 0xbe, 0x0d, 0xb2,
                0xe2, 0x35, 0xb4, 0x54, 0xa3, 0x9c, 0x93, 0x5d,
                0x8f, 0xca, 0xd6, 0x23, 0xe1, 0x07, 0xef, 0xe9,
                0x9f, 0x45, 0x51, 0xc3, 0xba, 0xf1, 0x9e, 0x93,
                0xfb, 0xfc, 0xc8, 0xbc, 0x78, 0xd8, 0x0a, 0xa7
            };
            var hashResult = CryptoLib.Common.GetDigest(knownInput, DigestAlgorithm.SHA512);
            Assert.AreEqual(knownHash, hashResult);
        }
    }
}
