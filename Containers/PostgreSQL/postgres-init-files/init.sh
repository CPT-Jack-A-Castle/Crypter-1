#!/bin/bash
set -e

psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
   CREATE DATABASE crypter;
   CREATE DATABASE crypter_hangfire;
EOSQL

#psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
#   CREATE USER cryptuser WITH PASSWORD 'CHANGE_ME';
#   REVOKE ALL PRIVILEGES ON DATABASE postgres FROM cryptuser;
#   REVOKE ALL PRIVILEGES ON SCHEMA public FROM cryptuser;
#   REVOKE CREATE ON SCHEMA public FROM PUBLIC;
#EOSQL

#psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "crypter" <<-EOSQL
#   REVOKE ALL PRIVILEGES ON DATABASE crypter FROM cryptuser;
#   REVOKE ALL PRIVILEGES ON SCHEMA public FROM cryptuser;
#   REVOKE CREATE ON SCHEMA public FROM PUBLIC;
#   GRANT CONNECT ON DATABASE crypter TO cryptuser;
#   ALTER DEFAULT PRIVILEGES FOR USER postgres IN SCHEMA public GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO cryptuser;
#EOSQL

# !psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "crypter_hangfire" <<-EOSQL
#   REVOKE ALL PRIVILEGES ON DATABASE crypter_hangfire FROM cryptuser;
#   REVOKE ALL PRIVILEGES ON SCHEMA public FROM cryptuser;
#   REVOKE ALL PRIVILEGES ON SCHEMA hangfire FROM cryptuser;
#   REVOKE CREATE ON SCHEMA public FROM PUBLIC;
#   REVOKE CREATE ON SCHEMA hangfire FROM PUBLIC;
#   GRANT CONNECT ON DATABASE crypter_hangfire TO cryptuser;
#   ALTER DEFAULT PRIVILEGES FOR USER postgres IN SCHEMA public GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO cryptuser;
#   ALTER DEFAULT PRIVILEGES FOR USER postgres IN SCHEMA hangfire GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO cryptuser;
#EOSQL
